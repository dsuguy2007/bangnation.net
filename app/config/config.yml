imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: "@BangnationUserBundle/Resources/config/services.yml" }


framework:
    #esi:             ~
    translator:      { fallback: %locale% }
    secret:          %secret%
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: %kernel.debug%
    form:            true
    csrf_protection: true
    validation:      { enable_annotations: true }
    templating:      { engines: ['twig'] } #assets_version: SomeVersionScheme
    default_locale:  %locale%
    trust_proxy_headers: false # Should Request object should trust proxy headers (X_FORWARDED_FOR/HTTP_CLIENT_IP)
    session:         ~

# Twig Configuration
twig:
    debug:            %kernel.debug%
    strict_variables: %kernel.debug%

# Assetic Configuration
assetic:
    debug:          %kernel.debug%
    use_controller: false
    bundles:        [ MopaBootstrapBundle, BangnationEventBundle ]
    #java: /usr/bin/java
    filters:
        sass:
            bin: /usr/local/bin/sass        
            apply_to: "\.scss$"
        compass:
            bin: /usr/local/bin/compass
            apply_to: "\.scss$|\.sass$" 
        less:
            node: %node%
            node_paths: %node_paths%
            apply_to: "\.less$"
        cssrewrite:
            apply_to: "\.css$"
#        cssembed:
#            jar: %kernel.root_dir%/Resources/java/cssembed-0.4.5.jar
#            apply_to: "\.css$|\.less$"
#        closure:
#            jar: %kernel.root_dir%/Resources/java/compiler.jar
#            apply_to: "\.js$"
        yui_css:
            jar: %kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar
            apply_to: "\.css$"
        yui_js:
            jar: %kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar
            apply_to: "\.js$"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   %database_driver%
        host:     %database_host%
        port:     %database_port%
        dbname:   %database_name%
        user:     %database_user%
        password: %database_password%
        charset:  UTF8

    orm:
        auto_generate_proxy_classes: %kernel.debug%
        auto_mapping: true

stof_doctrine_extensions:
    default_locale: en_US
    orm:
        default:
            sluggable: true
            
# Swiftmailer Configuration
swiftmailer:
    transport: %mailer_transport%
    host:      %mailer_host%
    username:  %mailer_user%
    password:  %mailer_password%
    encryption: ssl
#    spool:     # { type: memory }
#        type: file
#        path: "%kernel.root_dir%/spool"

fos_user:
    db_driver: orm
    firewall_name: main
    user_class: Bangnation\UserBundle\Entity\User

    registration:
        form:
            type: bangnation_user_registration
        confirmation:
            enabled: true            
    from_email:
        address:        no-reply@bangnation.net
        sender_name:    Bangnation
    profile:
        form:
            type: bangnation_user_profile
        
mopa_bootstrap:
    initializr: 
        meta:
            title:        "Bang Nation"
            description:  "Where citizens come together"
            keywords:     "keyword1,keyword 2"
#            author_name:  "wormling"
#            author_url:   "/wormling.txt"
            nofollow:     false
            noindex:      false
            
#            sitemap:
#            feed_rss:
#            feed_atom:
        dns_prefetch:
            - '//ajax.googleapis.com'
        google:
#            wt: 'xxx'
            analytics: 'UA-34127518-1'
        diagnostic_mode: false
    navbar: ~
    form:
        show_legend: false
        show_child_legend: false
        error_type: inline # or block
        
liip_imagine:
    driver:               gd
    web_root:             %kernel.root_dir%/../web
    data_root:            %kernel.root_dir%/../web
    cache_prefix:         /media/cache
    cache:                web_path
    data_loader:          filesystem
    controller_action:    liip_imagine.controller:filterAction
    formats:              []
    filter_sets:
        logo_small:
            quality: 100
            filters: 
                thumbnail: { size: [262, ~], mode: outbound, allow_upscale: true }          
        logo_medium:
            quality: 100
            filters: 
                thumbnail: { size: [350, ~], mode: outbound, allow_upscale: true }          

services:
    bangnation_user.registration.form.type:
        class: Bangnation\UserBundle\Form\Type\RegistrationFormType
        arguments: [%fos_user.model.user.class%]
        tags:
            - { name: form.type, alias: bangnation_user_registration }
            
    bangnation.user.profile.form.type:
        class: Bangnation\UserBundle\Form\Type\ProfileFormType
        arguments: [%fos_user.model.user.class%]
        tags:
            - { name: form.type, alias: bangnation_user_profile }

    mopa_bootstrap.menu_builder:
        class: Bangnation\CommonBundle\Navbar\MenuBuilder
        arguments: ["@knp_menu.factory", "@security.context"]

    mopa_bootstrap.leftmenu:
        class: Knp\Menu\MenuItem # the service definition requires setting the class
        factory_service: mopa_bootstrap.menu_builder
        factory_method: createMainMenu
        arguments: ["@request"]
        scope: request # needed as we have the request as a dependency here
        tags:
            - { name: knp_menu.menu, alias: main } # The alias is what is used to retrieve the menu

    mopa_bootstrap.rightmenu:
        class: Knp\Menu\MenuItem # the service definition requires setting the class
        factory_service: mopa_bootstrap.menu_builder
        factory_method: createRightSideDropdownMenu
        arguments: ["@request"]
        scope: request # needed as we have the request as a dependency here
        tags:
            - { name: knp_menu.menu, alias: exampledropdown } # The alias is what is used to retrieve the menu
            
    mopa_bootstrap.navbar:
        class: %mopa_bootstrap.navbar.generic%
        arguments:
            # first argument: a named array of menues:
            - { leftmenu: @mopa_bootstrap.leftmenu=, rightmenu: @mopa_bootstrap.rightmenu= }
            # second argument: a named array of FormType Classes  
            #- { searchform: Combo\MainBundle\Form\SearchFormType }
            - {}
            # third argument: a named array of options
            - { title: "Bang Nation", titleRoute: "welcome", fixedTop: true, isFluid: false }
        tags:
            # The alias is used to retrieve the navbar in templates
            - { name: mopa_bootstrap.navbar, alias: frontendNavbar }
            
    # Matcher for showing selected menu item for knp_menu
    bangnation.voter.request:
        class: Bangnation\CommonBundle\Voter\RequestVoter
        arguments:
            - @service_container
        tags:
            - { name: knp_menu.voter }
            